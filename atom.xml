<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Aaron&#39;s blog</title>
  
  <subtitle>a wide reading of the lost teenager</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-03-21T05:56:24.099Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Aaron</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>blockchain</title>
    <link href="http://yoursite.com/2018/03/19/blockchain/"/>
    <id>http://yoursite.com/2018/03/19/blockchain/</id>
    <published>2018-03-19T03:22:22.000Z</published>
    <updated>2018-03-21T05:56:24.099Z</updated>
    
    <content type="html"><![CDATA[<h3 id="区块链本质"><a href="#区块链本质" class="headerlink" title="区块链本质"></a>区块链本质</h3><p>区块链(blockchain)本质上是一个对等网络(peer-topeer)的分布式账本数据库。 区块链本身其实是一串链接的数据区块，其链接指针是采用密码学哈希算法对区块头进行处理所产生的区块头哈希值。</p><blockquote><p>区块链分类：<br>1.以参与方式分类：公开链(Public BlockChain)、联盟链(Consortium BlockChain)和私有链(Private BlockChain)。<br>2.以链与链的关系分类：主链和侧链。</p></blockquote><p>区块链系统包含技术：</p><p><img src="../assets/img/blockchain.jpg" alt="区块链"></p><h3 id="区块"><a href="#区块" class="headerlink" title="区块"></a>区块</h3><p>区块链由一个个区块（block）组成。 每个区块一般包含区块头(Header)和区块体(Body)两部分。</p><p><img src="../assets/img/block_struct.jpg" alt="区块结构"></p><h3 id="挖矿"><a href="#挖矿" class="headerlink" title="挖矿"></a>挖矿</h3><p>所谓挖矿，实际上是穷举随机数算法，把上个区块的哈希值加上10分钟内的全部交易单打包，再加上一个随机数，算出一个256位的字符串哈希值，输入的随机数Nonce使哈希值满足一定条件就获得这个区块的交易记账权。</p><blockquote><p>因此，挖矿实际是计算哈希值的过程，矿工则指计算哈希值的服务器。</p></blockquote><h3 id="分布式"><a href="#分布式" class="headerlink" title="分布式"></a>分布式</h3><h3 id="共识算法"><a href="#共识算法" class="headerlink" title="共识算法"></a>共识算法</h3><p>要求在没有中心节点的情况下保证各个诚实节点记账的一致性。<br>区块链共识机制目前主要有4类：<br>1.POW<br>工作量证明机制<br>2.POS<br>3.DPOS<br>4.分布式一致性算法</p><h3 id="哈希函数"><a href="#哈希函数" class="headerlink" title="哈希函数"></a>哈希函数</h3><ul><li>哈希函数性质</li></ul><blockquote><p>1．抗碰撞性<br>碰撞是指两个不同的消息在同一个哈希函数作用下，具有相同的哈希值。对于哈希值长度为256位的哈希函数，要找到碰撞对，平均需要完成2128次哈希计算，如果计算机每秒能够进行10000次哈希计算，则需要约1027年才能完成这2128次哈希计算。<br>2.原像不可逆性<br>原像不可逆是指知道输入值，很容易通过哈希函数计算出哈希值；但知道哈希值，没有办法计算出原来的输入值。</p></blockquote><h3 id="加密算法"><a href="#加密算法" class="headerlink" title="加密算法"></a>加密算法</h3><ul><li>非对称加密算法</li></ul><blockquote><p>非对称加密算法指的就是存在一对数学相关的密钥，使用其中一个密钥进行加密的数据信息，只有使用另一个密钥才能对该信息进行解密。这对密钥中，对外公开的密钥叫作公钥，不公开的密钥就叫作私钥。打个比方来说，公钥就像银行的账户，私钥就像是该账户的密码或者账户所有者的签名。区块链之上的有效交易有一个用于交易发起方私钥签名有效的数字签名，而该交易的签名可以通过使用交易发起方的公钥进行验证。公钥可以通过算法从私钥中计算得出，但私钥却不能从公钥中推出。比特币系统中使用的就是一种非常典型的非对称加密算法——椭圆曲线加密算法（ECC）。</p></blockquote><ul><li>数字签名</li></ul><blockquote><p>数字签名就是在信息后面加上另一段内容，作为发送者的证明并且证明信息没有被篡改。一般是发送者将信息用哈希算法处理得出一个哈希值，然后用私钥对该哈希值进行加密，得出一个签名。然后发送者再将信息和签名一起发送给接收者。接收者使用发送者的公钥对签名进行解密，还原出哈希值，再通过哈希算法来验证信息的哈希值和解密签名还原出来的哈希值是否一致，从而可以鉴定信息是否来自发送者或验证信息是否被篡改。</p></blockquote><h3 id="比特币"><a href="#比特币" class="headerlink" title="比特币"></a>比特币</h3><ul><li>比特币获取</li></ul><blockquote><p>获取比特币有3中途径： 一是作为矿工挖矿获得，二是线上交易所购买或者线下通过中间人购买，三是作为商家收取比特币</p></blockquote><ul><li>哈希算法</li></ul><blockquote><p>比特币系统中最常采用的哈希函数是双SHA256哈希函数，通俗来说就是将不同长度的原始数据用两次SHA256哈希函数进行处理，再输出长度为256的二进制数字来进行统一的识别和存储。</p></blockquote><blockquote></blockquote><ul><li>加密算法</li></ul><blockquote><p> 比特币系统一般从操作系统底层的一个密码学安全的随机源中取出一个256位随机数作为私钥，私钥总数为2256个，所以很难通过遍历所有可能的私钥得出与公钥的对应的私钥。用户使用的私钥还会通过SHA256和Base58转换成易书写和识别的50位长度的私钥，公钥则首先由私钥和Secp256k1椭圆曲线算法生成65字节长度的随机数。一般情况下，比特币钱包的地址也由公钥所生成，其生成过程为首先将公钥进行SHA256和RIPEMD160双哈希运算，并生成20字节长度的摘要结果（即Hash160结果），这个将作为比特币地址的主体（body）信息，再在前面加上版本前缀0x00，在后面添加4个字节的地址校验码。地址校验码通过对摘要结果进行两次SHA256运算，取哈希值的前4位产生。最后通过Base58处理把连在一起的版本前缀、主体信息和校验码转换成可以容易让人识别的比特币字符地址。</p></blockquote><p><img src="../assets/img/hash.jpg" alt="hash"></p><ul><li>工作量证明<blockquote><p> 要求得到的哈希结果（以十六进制的形式表示）以若干个0开头的。按照这个规则，由x=1出发，递增x的值，我们需要经过2688次哈希计算才能找到前3位均为0的哈希值，而要找到前6位均为0的哈希值，则需进行620969次哈希计算。也就是说，没有更快捷的方法来产生一个满足要求的哈希结果。这样通过哈希运算得出的符合特定要求的哈希值，可以作为共识算法中的工作量证明。</p></blockquote></li></ul><h3 id="以太坊"><a href="#以太坊" class="headerlink" title="以太坊"></a>以太坊</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;区块链本质&quot;&gt;&lt;a href=&quot;#区块链本质&quot; class=&quot;headerlink&quot; title=&quot;区块链本质&quot;&gt;&lt;/a&gt;区块链本质&lt;/h3&gt;&lt;p&gt;区块链(blockchain)本质上是一个对等网络(peer-topeer)的分布式账本数据库。 区块链本身其实是一
      
    
    </summary>
    
    
      <category term="IT•blockchain" scheme="http://yoursite.com/tags/IT%E2%80%A2blockchain/"/>
    
  </entry>
  
  <entry>
    <title>git guide</title>
    <link href="http://yoursite.com/2018/03/17/git/"/>
    <id>http://yoursite.com/2018/03/17/git/</id>
    <published>2018-03-17T03:22:22.000Z</published>
    <updated>2018-03-20T02:12:17.804Z</updated>
    
    <content type="html"><![CDATA[<h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">1. git init</span><br><span class="line">2. git status</span><br><span class="line">3. git add *</span><br><span class="line">4. git commit -m &quot;use git command&quot;</span><br><span class="line">5. git checkout -- file  #撤销修改</span><br><span class="line">6. git remote add origin git@github.com:docker_user/blockchain_guide.git #增加远程仓库</span><br><span class="line">7. git push origin master #第一次用git push -u origin master</span><br><span class="line">8. git clone git@github.com:docker_user/blockchain_guide.git</span><br><span class="line">9. git branch dev #创建分支dev</span><br><span class="line">10. git checkout dev 切换到分支dev</span><br><span class="line">11. git checkout -b dev #-b参数表示创建并切换到分支，相当于两句：git branch dev , git checkout dev</span><br><span class="line">12. git branch #查看当前分支</span><br><span class="line">13. git merge dev #合并分支dev</span><br><span class="line">14. git branch -d dev #删除分支dev</span><br><span class="line">15. git log --graph #看到分支合并图</span><br><span class="line">16. git branch -D &lt;name&gt; #强行删除</span><br><span class="line">17. git remote #查看远程库信息，详情git remote -v</span><br><span class="line">18. git checkout -b dev origin/dev #创建远程origin的dev分支到本地</span><br><span class="line">19. git pull  #把最新的提交从origin/dev抓下来</span><br><span class="line">20. git diff HEAD -- readme.txt #可以查看工作区和版本库里面最新版本的区别</span><br><span class="line">21. git remote rm origin ##删除远程库</span><br><span class="line">22. git pull --rebase origin master</span><br></pre></td></tr></table></figure><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 在 GitHub 上 fork 到自己的仓库，然后 clone到本地，并设置用户信息</span><br><span class="line">$ git clone git@github.com:docker_user/blockchain_guide.git</span><br><span class="line">$ cd blockchain_guide</span><br><span class="line">$ git config user.name &quot;yourname&quot;</span><br><span class="line">$ git config user.email &quot;your email&quot;</span><br><span class="line"># 更新内容后提交，并推送到自己的仓库。</span><br><span class="line"></span><br><span class="line">$ git commit -am &quot;fix&quot;</span><br><span class="line">$ git push</span><br><span class="line"></span><br><span class="line"># 最后，在 GitHub 网站上提交 pull request 即可。</span><br><span class="line"># 另外，建议定期使用项目仓库内容更新自己仓库内容。</span><br><span class="line">$ git remote add upstream https://github.com/yeasy/blockchain_guide</span><br><span class="line">$ git fetch upstream</span><br><span class="line">$ git checkout master</span><br><span class="line">$ git rebase upstream/master</span><br><span class="line">$ git push -f origin master</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;常用命令&quot;&gt;&lt;a href=&quot;#常用命令&quot; class=&quot;headerlink&quot; title=&quot;常用命令&quot;&gt;&lt;/a&gt;常用命令&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pr
      
    
    </summary>
    
    
      <category term="IT•git" scheme="http://yoursite.com/tags/IT%E2%80%A2git/"/>
    
  </entry>
  
  <entry>
    <title>hexo + github page 搭建个人博客</title>
    <link href="http://yoursite.com/2018/03/13/hexo/"/>
    <id>http://yoursite.com/2018/03/13/hexo/</id>
    <published>2018-03-13T03:22:22.000Z</published>
    <updated>2018-03-19T01:58:32.951Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装node.js</h3><p>下载并安装：<a href="https://nodejs.org/en/" target="_blank" rel="noopener">node.js</a> </p><h3 id="安装-git"><a href="#安装-git" class="headerlink" title="安装 git"></a>安装 git</h3><p>下载并安装：<a href="https://git-scm.com/" target="_blank" rel="noopener">git</a> </p><h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g   #安装hexo   </span><br><span class="line">npm install hexo-deployer-git --save #部署到github page</span><br><span class="line"></span><br><span class="line">hexo init #初始化配置</span><br><span class="line"></span><br><span class="line">hexo g  #生成静态页面</span><br><span class="line">hexo s  #本地浏览器的localhost:4000 预览博文效果</span><br><span class="line"></span><br><span class="line">hexo g -d  #发布到github上</span><br></pre></td></tr></table></figure><h3 id="设置hexo主题"><a href="#设置hexo主题" class="headerlink" title="设置hexo主题"></a>设置hexo主题</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ git clone https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak.git themes/tranquilp</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;安装node-js&quot;&gt;&lt;a href=&quot;#安装node-js&quot; class=&quot;headerlink&quot; title=&quot;安装node.js&quot;&gt;&lt;/a&gt;安装node.js&lt;/h3&gt;&lt;p&gt;下载并安装：&lt;a href=&quot;https://nodejs.org/en/&quot; tar
      
    
    </summary>
    
    
      <category term="IT•hexo" scheme="http://yoursite.com/tags/IT%E2%80%A2hexo/"/>
    
  </entry>
  
</feed>
